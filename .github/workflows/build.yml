name: Build and Deploy

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      deploy_to_stores:
        description: 'Deploy to app stores'
        required: true
        default: false
        type: boolean

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  FLUTTER_VERSION: '3.16.0'
  JAVA_VERSION: '17'
  XCODE_VERSION: '15.0'

jobs:
  build-android:
    name: Build Android
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}
          
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true
          
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.pub-cache
            **/.dart_tool
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pub-
            
      - name: Install dependencies
        run: flutter pub get
        
      - name: Generate code
        run: |
          if grep -q "build_runner" pubspec.yaml; then
            flutter pub run build_runner build --delete-conflicting-outputs
          fi
          
      - name: Setup Android signing
        if: github.event_name != 'pull_request'
        run: |
          echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 -d > android/app/keystore.jks
          echo "storeFile=keystore.jks" >> android/key.properties
          echo "storePassword=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" >> android/key.properties
          echo "keyPassword=${{ secrets.ANDROID_KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.ANDROID_KEY_ALIAS }}" >> android/key.properties
          
      - name: Build debug APK (PR)
        if: github.event_name == 'pull_request'
        run: flutter build apk --debug
        
      - name: Build release APK
        if: github.event_name != 'pull_request'
        run: flutter build apk --release
        
      - name: Build App Bundle
        if: github.event_name != 'pull_request'
        run: flutter build appbundle --release
        
      - name: Sign APK
        if: github.event_name != 'pull_request'
        run: |
          $ANDROID_SDK_ROOT/build-tools/34.0.0/zipalign -v -p 4 \
            build/app/outputs/flutter-apk/app-release.apk \
            build/app/outputs/flutter-apk/app-release-aligned.apk
            
      - name: Upload APK artifact
        uses: actions/upload-artifact@v3
        with:
          name: android-apk
          path: |
            build/app/outputs/flutter-apk/*.apk
            build/app/outputs/bundle/release/*.aab
            
      - name: Get APK info
        id: apk-info
        run: |
          APK_PATH="build/app/outputs/flutter-apk/app-release.apk"
          if [ -f "$APK_PATH" ]; then
            APK_SIZE=$(du -h "$APK_PATH" | cut -f1)
            echo "apk_size=$APK_SIZE" >> $GITHUB_OUTPUT
            aapt dump badging "$APK_PATH" > apk_info.txt || true
          fi
          
      - name: Deploy to Google Play (Internal Testing)
        if: github.ref == 'refs/heads/main' && !startsWith(github.ref, 'refs/tags/')
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT }}
          packageName: com.familybridge.app
          releaseFiles: build/app/outputs/bundle/release/app-release.aab
          track: internal
          status: completed
          
      - name: Deploy to Google Play (Production)
        if: startsWith(github.ref, 'refs/tags/v') || github.event.inputs.deploy_to_stores == 'true'
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT }}
          packageName: com.familybridge.app
          releaseFiles: build/app/outputs/bundle/release/app-release.aab
          track: production
          status: draft
          inAppUpdatePriority: 2

  build-ios:
    name: Build iOS
    runs-on: macos-latest
    timeout-minutes: 45
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true
          
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.pub-cache
            **/.dart_tool
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pub-
            
      - name: Install dependencies
        run: flutter pub get
        
      - name: Generate code
        run: |
          if grep -q "build_runner" pubspec.yaml; then
            flutter pub run build_runner build --delete-conflicting-outputs
          fi
          
      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: ${{ env.XCODE_VERSION }}
          
      - name: Install iOS dependencies
        run: |
          cd ios
          pod install
          cd ..
          
      - name: Setup iOS certificates and provisioning profiles
        if: github.event_name != 'pull_request'
        run: |
          # Import certificates and provisioning profiles
          echo "${{ secrets.IOS_P12_BASE64 }}" | base64 -d > certificate.p12
          echo "${{ secrets.IOS_PROVISION_PROFILE_BASE64 }}" | base64 -d > profile.mobileprovision
          
          # Create keychain
          security create-keychain -p "${{ secrets.IOS_KEYCHAIN_PASSWORD }}" build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "${{ secrets.IOS_KEYCHAIN_PASSWORD }}" build.keychain
          security set-keychain-settings -t 3600 -u build.keychain
          
          # Import certificate
          security import certificate.p12 -k build.keychain -P "${{ secrets.IOS_P12_PASSWORD }}" -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "${{ secrets.IOS_KEYCHAIN_PASSWORD }}" build.keychain
          
          # Install provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp profile.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/
          
      - name: Build iOS (Debug)
        if: github.event_name == 'pull_request'
        run: flutter build ios --debug --no-codesign
        
      - name: Build iOS (Release)
        if: github.event_name != 'pull_request'
        run: flutter build ios --release
        
      - name: Archive iOS app
        if: github.event_name != 'pull_request'
        run: |
          xcodebuild -workspace ios/Runner.xcworkspace \
            -scheme Runner \
            -configuration Release \
            -destination generic/platform=iOS \
            -archivePath build/Runner.xcarchive \
            archive
            
      - name: Export IPA
        if: github.event_name != 'pull_request'
        run: |
          xcodebuild -exportArchive \
            -archivePath build/Runner.xcarchive \
            -exportPath build \
            -exportOptionsPlist ios/ExportOptions.plist
            
      - name: Upload IPA artifact
        if: github.event_name != 'pull_request'
        uses: actions/upload-artifact@v3
        with:
          name: ios-ipa
          path: build/*.ipa
          
      - name: Deploy to TestFlight
        if: github.ref == 'refs/heads/main' && !startsWith(github.ref, 'refs/tags/')
        run: |
          xcrun altool --upload-app \
            --type ios \
            --file build/Runner.ipa \
            --username "${{ secrets.APPLE_ID_EMAIL }}" \
            --password "${{ secrets.APPLE_ID_PASSWORD }}"
            
      - name: Deploy to App Store
        if: startsWith(github.ref, 'refs/tags/v') || github.event.inputs.deploy_to_stores == 'true'
        run: |
          xcrun altool --upload-app \
            --type ios \
            --file build/Runner.ipa \
            --username "${{ secrets.APPLE_ID_EMAIL }}" \
            --password "${{ secrets.APPLE_ID_PASSWORD }}"

  build-web:
    name: Build Web
    runs-on: ubuntu-latest
    timeout-minutes: 20
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true
          
      - name: Enable web support
        run: flutter config --enable-web
        
      - name: Install dependencies
        run: flutter pub get
        
      - name: Generate code
        run: |
          if grep -q "build_runner" pubspec.yaml; then
            flutter pub run build_runner build --delete-conflicting-outputs
          fi
          
      - name: Build web
        run: flutter build web --release --web-renderer canvaskit
        
      - name: Upload web build artifact
        uses: actions/upload-artifact@v3
        with:
          name: web-build
          path: build/web/

  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [build-android, build-ios, build-web]
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Download Android artifact
        uses: actions/download-artifact@v3
        with:
          name: android-apk
          path: android-artifacts/
          
      - name: Download iOS artifact
        uses: actions/download-artifact@v3
        with:
          name: ios-ipa
          path: ios-artifacts/
          
      - name: Download Web artifact
        uses: actions/download-artifact@v3
        with:
          name: web-build
          path: web-artifacts/
          
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            android-artifacts/**/*
            ios-artifacts/**/*
          generate_release_notes: true
          draft: false
          prerelease: false
          
      - name: Deploy web to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: web-artifacts/

  notify:
    name: Notify Teams
    runs-on: ubuntu-latest
    needs: [build-android, build-ios, build-web]
    if: always() && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v'))
    
    steps:
      - name: Notify Slack
        if: success()
        uses: 8398a7/action-slack@v3
        with:
          status: success
          text: |
            ✅ FamilyBridge build completed successfully!
            
            📱 Android: ${{ needs.build-android.result }}
            🍎 iOS: ${{ needs.build-ios.result }}
            🌐 Web: ${{ needs.build-web.result }}
            
            Branch: ${{ github.ref_name }}
            Commit: ${{ github.sha }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          
      - name: Notify Slack on failure
        if: failure()
        uses: 8398a7/action-slack@v3
        with:
          status: failure
          text: |
            ❌ FamilyBridge build failed!
            
            📱 Android: ${{ needs.build-android.result }}
            🍎 iOS: ${{ needs.build-ios.result }}
            🌐 Web: ${{ needs.build-web.result }}
            
            Branch: ${{ github.ref_name }}
            Commit: ${{ github.sha }}
            
            Please check the logs: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}