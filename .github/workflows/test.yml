name: Test Suite

on:
  push:
    branches: [ main, develop, 'feature/**' ]
  pull_request:
    branches: [ main, develop ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  analyze:
    name: Code Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.16.0'
          cache: true
          
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.pub-cache
            **/.dart_tool
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pub-
            
      - name: Install dependencies
        run: flutter pub get
        
      - name: Generate code
        run: |
          if grep -q "build_runner" pubspec.yaml; then
            flutter pub run build_runner build --delete-conflicting-outputs
          fi
          
      - name: Verify formatting
        run: dart format --set-exit-if-changed lib/ test/
        
      - name: Analyze project
        run: flutter analyze --fatal-infos
        
      - name: Check for unused imports
        run: |
          if command -v dart &> /dev/null; then
            dart run dart_code_metrics:metrics check-unused-files lib
            dart run dart_code_metrics:metrics check-unused-code lib
          fi

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: analyze
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.16.0'
          cache: true
          
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.pub-cache
            **/.dart_tool
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pub-
            
      - name: Install dependencies
        run: flutter pub get
        
      - name: Generate code
        run: |
          if grep -q "build_runner" pubspec.yaml; then
            flutter pub run build_runner build --delete-conflicting-outputs
          fi
          
      - name: Run unit tests
        run: flutter test --coverage --reporter=expanded
        
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: coverage/lcov.info
          flags: unit-tests
          name: unit-test-coverage
          
      - name: Archive test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: unit-test-results
          path: |
            test/
            coverage/
            
  widget-tests:
    name: Widget Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: analyze
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.16.0'
          cache: true
          
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.pub-cache
            **/.dart_tool
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pub-
            
      - name: Install dependencies
        run: flutter pub get
        
      - name: Generate code
        run: |
          if grep -q "build_runner" pubspec.yaml; then
            flutter pub run build_runner build --delete-conflicting-outputs
          fi
          
      - name: Run widget tests
        run: |
          if [ -d "test/widget" ]; then
            flutter test test/widget/ --coverage --reporter=expanded
          else
            echo "No widget tests found"
          fi
          
      - name: Upload widget test coverage
        if: success()
        uses: codecov/codecov-action@v3
        with:
          files: coverage/lcov.info
          flags: widget-tests
          name: widget-test-coverage

  integration-tests:
    name: Integration Tests
    runs-on: macos-latest
    timeout-minutes: 45
    needs: [unit-tests, widget-tests]
    strategy:
      fail-fast: false
      matrix:
        device: [iPhone 14, iPad Pro (12.9-inch)]
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.16.0'
          cache: true
          
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.pub-cache
            **/.dart_tool
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pub-
            
      - name: Install dependencies
        run: flutter pub get
        
      - name: Generate code
        run: |
          if grep -q "build_runner" pubspec.yaml; then
            flutter pub run build_runner build --delete-conflicting-outputs
          fi
          
      - name: Start iOS Simulator
        run: |
          xcrun simctl create TestDevice com.apple.CoreSimulator.SimDeviceType.${{ matrix.device }} com.apple.CoreSimulator.SimRuntime.iOS-17-0 || true
          xcrun simctl boot TestDevice || true
          xcrun simctl list devices
          
      - name: Run integration tests
        run: |
          if [ -d "integration_test" ]; then
            flutter test integration_test/ --verbose
          else
            echo "No integration tests found"
          fi
          
      - name: Upload screenshots
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: integration-test-screenshots-${{ matrix.device }}
          path: |
            integration_test/screenshots/
            test/screenshots/

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs: analyze
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.16.0'
          cache: true
          
      - name: Install dependencies
        run: flutter pub get
        
      - name: Run security audit
        run: flutter pub deps --json | jq '.packages[] | select(.kind == "direct")' || true
        
      - name: Scan for secrets
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: main
          head: HEAD
          extra_args: --debug --only-verified

  performance-test:
    name: Performance Test
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs: analyze
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.16.0'
          cache: true
          
      - name: Install dependencies
        run: flutter pub get
        
      - name: Generate code
        run: |
          if grep -q "build_runner" pubspec.yaml; then
            flutter pub run build_runner build --delete-conflicting-outputs
          fi
          
      - name: Build app for performance testing
        run: flutter build apk --profile
        
      - name: Measure app size
        run: |
          APK_SIZE=$(du -h build/app/outputs/flutter-apk/app-profile.apk | cut -f1)
          echo "APK Size: $APK_SIZE"
          echo "apk_size=$APK_SIZE" >> $GITHUB_OUTPUT
          
      - name: Comment PR with performance metrics
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## Performance Metrics ðŸ“Š\n\n- **APK Size**: ${{ steps.performance.outputs.apk_size }}\n\n*Metrics generated by GitHub Actions*`
            })

  test-summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: [unit-tests, widget-tests, integration-tests, security-scan, performance-test]
    if: always()
    
    steps:
      - name: Test Results Summary
        run: |
          echo "## Test Results Summary" >> $GITHUB_STEP_SUMMARY
          echo "| Test Type | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-----------|---------|" >> $GITHUB_STEP_SUMMARY
          echo "| Unit Tests | ${{ needs.unit-tests.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Widget Tests | ${{ needs.widget-tests.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Integration Tests | ${{ needs.integration-tests.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Security Scan | ${{ needs.security-scan.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Performance Test | ${{ needs.performance-test.result }} |" >> $GITHUB_STEP_SUMMARY
          
      - name: Check if all tests passed
        if: needs.unit-tests.result != 'success' || needs.widget-tests.result != 'success'
        run: |
          echo "Some tests failed!"
          exit 1